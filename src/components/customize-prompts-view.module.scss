/* CustomizePromptsView Styles */

.viewContainer {
  display: flex;
  flex-direction: column;
  flex-grow: 1; // Fill available vertical space in the parent modal
  min-height: 0; // Crucial for nested flex scrolling
  overflow: hidden; // Prevent this container from scrolling; formArea will scroll
  background-color: var(--mui-palette-background-paper); // Or your desired background
  // Assuming it's a direct child of a flex container (the modal box)
  // width: 100%; // Should already be handled by the parent modal's width setting
}

.header {
  padding: 32px 0 18px 0; // Matches modal content padding, specific to this view
  gap: 8px;
  .title {
    padding: 6px 16px 0px 16px;
    color: #131a28;
    font-size: 20px; // From Figma
    font-family: "Inter", sans-serif;
    font-weight: 600;
    line-height: 32px;
  }
  .subtitle {
    padding: 0px 16px 6px 16px;
    color: #757575;
    font-size: 16px; // From Figma
    font-family: "Inter", sans-serif;
    font-weight: 500; // Figma specifies 500 for this
    line-height: 32px;
  }
  flex-grow: 1;
  overflow-y: auto; // Allow form content to scroll if it overflows
  // min-height: 0; // Already implicitly handled by overflow-y: auto in flex children usually

  padding: 18px 16px 8px 16px;
}

.divider {
  border-color: #b3b3b3;
}

.formArea {
  flex-grow: 1;
  overflow-y: auto; // Allow form content to scroll if it overflows

  padding: 18px 16px 8px 16px;
  display: flex;
  flex-direction: column;
  gap: 20px; // Gap between form sections
}

.formSection {
  display: flex !important;
  border-radius: 8px !important; 
  flex-direction: column !important;
  gap: 20px !important; // Gap between label and input within a section (was 20px, adjusted for better density)

  .textField,
  .textArea {
    .MuiOutlinedInput-root {
      background-color: white !important; // Ensure background is white as per Figma
      font-family: "Inter", sans-serif !important;
      .MuiOutlinedInput-input {
        padding: 10px 16px !important; // Adjusted padding for text fields
        font-size: 15px !important;
        color: #131a28 !important; // For typed text
        &::placeholder {
          color: #cacaca !important; // Placeholder color
          opacity: 1 !important;
        }
      }
      .MuiOutlinedInput-notchedOutline {
        border: 1px solid #cacaca !important;
        border-radius: 8px !important;
      }
      &:hover .MuiOutlinedInput-notchedOutline {
        border-color: #a0a0a0 !important;
      }
      &.Mui-focused .MuiOutlinedInput-notchedOutline {
        border-radius: 8px !important;
        border-color: #1976d2 !important; // Or your app's primary color
        border-width: 1px !important; // Keep consistent border width on focus
      }
    }
  }

  .textArea {
    .MuiOutlinedInput-input {
        height: 100px !important; // Approximate height from Figma (160px total - padding)
    }
  }
}

.traitsContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-top: 8px; // Space above the chips
}

.traitChip {
  border-radius: 48px !important; // Important to override MUI default
  border: 1px solid #cacaca !important;
  font-family: "Inter", sans-serif !important;
  font-size: 15px !important;
  font-weight: 500 !important;
  line-height: 32px !important; // Explicit line height for chip content
  padding: 4px 8px !important; // Reduce padding a bit
  color: #757575 !important;
  background-color: white !important;

  .MuiChip-icon {
    color: #757575 !important;
    margin-left: 6px !important; // Space before icon
    margin-right: -4px !important; // Adjust default icon spacing
    font-size: 20px !important;
  }
  .MuiChip-label {
    padding-left: 8px !important;
    padding-right: 8px !important;
  }

  &:hover {
    border-color: #757575 !important;
    background-color: #f5f5f5 !important;
  }

  &.selectedTrait {
    border-color: #1976d2 !important; // Example: primary color for selected
    background-color: #e3f2fd !important; // Lighter shade of primary for selected bg
    color: #1976d2 !important;
    .MuiChip-icon {
      color: #1976d2 !important;
    }
  }
}


.actionsFooter {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 16px;
  padding-top: 24px; // Space above the action buttons
  margin-top: auto; // Push to the bottom if formArea doesn't fill space
}

.cancelButton {
  font-family: "Inter", sans-serif !important;
  font-size: 15px !important;
  font-weight: 500 !important;
  color: #131a28 !important;
  border-color: #cacaca !important;
  border-radius: 48px !important;
  padding: 4px 16px !important;
  text-transform: none !important;
  &:hover {
    border-color: #131a28 !important;
    background-color: #f9f9f9 !important;
  }
}

.saveButton {
  font-family: "Inter", sans-serif !important;
  font-size: 15px !important;
  font-weight: 500 !important;
  border-radius: 48px !important;
  padding: 4px 16px !important;
  text-transform: none !important;
  background-color: #f3f3f3 !important; // Default disabled state from Figma
  color: #cacaca !important;
  border: 1px solid #f3f3f3 !important;

  &:not(:disabled) {
    background-color: #131a28 !important; // Enabled state (example, use your primary color)
    color: white !important;
    border-color: #131a28 !important;
    &:hover {
      background-color: #333a47 !important;
    }
  }
} 