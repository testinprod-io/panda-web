/* Settings Modal Styles */

.modalBackdrop {
  /* Styles for the modal backdrop, if needed (e.g., background blur) */
  /* backdropFilter: 'blur(5px)'; // Example */
}

.modalContent {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  max-width: min(712px, 90%); // Adjusted for a slightly wider modal to accommodate columns
  min-width: min(512px, 90%);
  background: var(--bg-primary);
  box-shadow: 0px 2px 20px rgba(0, 0, 0, 0.1);
  border-radius: 16px;
  outline: 1px solid var(--border-primary);
  padding: 0; // Padding will be handled by inner elements
  display: flex;
  flex-direction: column;
  height: 60vh;
  max-height: 90vh;
  overflow: hidden; // Prevent content from spilling before internal scroll is set
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 24px 24px 18px 32px; // Adjusted padding

  .title {
    color: var(--text-primary);
    font-size: 20px;
    font-family: "Inter", sans-serif;
    font-weight: 600;
    line-height: 32px;
  }

  .closeButton {
    color: var(--icon-primary);
  }
  .backButton {
    color: var(--icon-primary);
    margin-right: 8px; // Space between back button and title
  }
}

.divider {
  border-color: var(--border-primary);
  margin: 0 24px; // Apply margin to keep it within padding
}

.mainArea {
  display: flex;
  flex-grow: 1;
  overflow: hidden; // Important for children to scroll independently if needed
  padding: 24px 24px 32px 18px; // Adjusted padding
  // padding-top: 18px; // Space below divider
  // padding-bottom: 32px; // Bottom padding for the modal
}

.leftNav {
  // width: 200px; // Fixed width for the left navigation panel
  // padding-left: 24px;
  padding-right: 10px; // Gap between nav and content
  // border-right: 1px solid #e0e0e0; // Visual separator
  flex-shrink: 0;
  overflow-y: auto; // Scroll if nav items exceed height

  .navItem {
    border-radius: 8px;
    margin-bottom: 4px; // Space between nav items
    padding-top: 8px;
    padding-bottom: 8px;
    height:48px;
    &:hover {
      background-color: var(--bg-tertiary);
    }

    .navItemIcon {
        min-width: auto; // Override MUI default
        margin-right: 12px; // Space icon from text
        color: var(--icon-primary);
    }

    &.navItemActive {
      background-color: var(--bg-tertiary);
      font-weight: 500;

      .navItemIcon {
        color: var(--icon-primary); // Ensure icon color matches active state if needed
      }
    }

    @media (max-width: 600px) {
      .navItemIcon {
        margin-right: 0px;
      }
    
      .navItemText {
        display: none;
      }
    }
  }
}

.rightPanel {
  flex-grow: 1;
  padding-left: 24px;
  padding-right: 24px;
  overflow-y: auto; // Allow content to scroll if it overflows
  display: flex;
  flex-direction: column;
  @media (max-width: 600px) {
    padding-left: 16px;
    padding-right: 16px;
  }
  @media (max-width: 400px) {
    padding-left: 0px;
    padding-right: 0px;
  }
}

.promptsViewFullArea {
    flex-grow: 1;
    padding: 0 24px 24px 24px; // Match rightPanel padding, but applies to the full area post-header
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

.generalSettings {
  display: flex;
  flex-direction: column;
  gap: 0px; // Reduced gap, padding will handle spacing
}

.settingItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px 0; // Vertical padding for each item
  border-bottom: 1px solid var(--border-primary); // Separator line

  &:last-child {
    border-bottom: none;
  }

  .settingItemLabel {
    color: var(--text-primary);
    font-size: 16px;
    font-family: "Inter", sans-serif;
    font-weight: 400;
    line-height: 32px; // Matches Figma
    flex-grow: 1;
    margin-right: 16px; // Space before control
  }

  .settingItemControl {
    display: flex;
    align-items: center;
    // Styles for specific controls are below
  }
}

/* Specific Control Styles */
.selectControl {
  min-width: 150px; // Ensure select has enough width
  // border-radius: 8px;
  .MuiSelect-select {
    padding-right: 32px !important; // Ensure space for icon
    font-size: 15px;
    font-family: "Inter", sans-serif;
    font-weight: 500;
    // color: #131A28;
  }
  .MuiOutlinedInput-notchedOutline {
    border: none !important; // Figma shows no border directly on select itself
  }
  &.Mui-focused .MuiSelect-outlined {
    border: none !important;
  }
}

.selectMenuPaper {
    box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.1) !important;
    // border: 1px solid #d0d0d0 !important;
    // border-radius: 8px !important;
    background-color: var(--bg-primary) !important;
    font-family: "Inter", sans-serif;
    font-weight: 400;
    font-size: 14px;
    color: var(--text-primary);
}


.actionButtonText {
  color: var(--text-primary) !important;
  font-size: 15px !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 500 !important;
  text-transform: none !important; // Keep text as is
  padding: 4px 0px !important; // Adjust padding to better match Figma for text buttons
  border-radius: 48px !important;
  line-height: 32px !important;

  .MuiButton-endIcon {
    margin-left: 6px !important;
    color: var(--icon-secondary) !important; // Icon color from Figma
  }

  &:hover,
  &:active {
    background-color: transparent !important; // Override MUI hover/active background
  }
}

.actionButton {
  font-size: 15px !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 500 !important;
  text-transform: none !important; // Keep text as is
  flex-shrink: 0;
  padding: 4px 16px !important;
  border-radius: 48px !important;
  border: 1px solid #cacaca !important;
  color: var(--text-primary) !important;
  line-height: 32px !important; // Explicitly set line-height to match Figma's visual height

  &:hover {
    border: 1px solid var(--text-primary);
    background-color: var(--bg-tertiary);
  }
}

.deleteButton {
  background-color: #f33d4f !important;
  color: var(--white) !important; // Figma has light text for delete button
  font-size: 15px !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 500 !important;
  text-transform: none !important;
  padding: 4px 16px !important;
  border-radius: 48px !important;
  line-height: 32px !important;
  box-shadow: 0px !important;

  &:hover {
    background-color: #d03140 !important; // Darker shade for hover
  }
}

/* Confirmation Dialog Styles */
.confirmDialog {
  :global(.MuiDialog-paper) {
    width: 100%;
    // max-width: 450px; // Adjusted for a more typical dialog width
    
    // padding: 32px 24px;
    background: var(--Fill-Inverse_Primary, white);
    box-shadow: 0px 2px 18px rgba(0, 0, 0, 0.10);
    border-radius: 16px;
    outline: 1px var(--Border-Tertiary, #CACACA) solid;
    outline-offset: -1px; // Not directly translatable, but outline behaves this way
    margin: 0; // Reset margin if any default exists
  }
}

.confirmDialogTitleContainer {
  padding: 0; // Reset MUI default padding
  border-bottom: 1px var(--border-primary) solid;
  margin-bottom: 10px; // Corresponds to gap: 10 in parent
}

.confirmDialogTitle {
  padding: 16px 4px; // paddingTop: 16, paddingBottom: 16, paddingLeft: 4, paddingRight: 4
  // background: var(--Fill-inverse, white); // Already on parent
  border-radius: 8px;
  color: var(--text-primary);
  font-size: 20px;
  font-family: "Inter", sans-serif;
  font-weight: 600;
  line-height: 24px;
  margin: 0; // Reset MUI default margin
  width: 100%; // Ensure it takes full width for alignment
  display: flex; // For centering if needed, though text is usually left
  justify-content: flex-start; // Align title text to the start
}

.confirmDialogContent {
  :global(.MuiDialogContent) {
    padding: 102px 0px; // paddingTop: 12, paddingBottom: 12
  }
  // Removed align-items: flex-end as it's unusual for content area
}

.confirmDialogContentTextPrimary {
  padding: 12px 4px;
  // background: var(--Fill-inverse, white);
  border-radius: 8px;
  color: var(--text-primary);
  font-size: 16px;
  font-family: "Inter", sans-serif;
  font-weight: 500;
  line-height: 24px;
  letter-spacing: 0.20px;
  margin-bottom: 16px; // Approximate gap from visual inspection (gap: 32 on parent flex items)
}

.confirmDialogContentTextSecondary {
  padding: 12px 4px;
  // background: var(--Fill-inverse, white);
  border-radius: 8px;
  color: var(--text-secondary);
  font-size: 16px;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  line-height: 24px;
  letter-spacing: 0.20px;
  margin-bottom: 16px; // Approximate gap
}

.confirmDialogActions {
  :global(.MuiDialogActions-root) {
    padding: 16px 0 0 0; // paddingTop: 16, paddingBottom: 16, but DialogActions adds its own padding
    justify-content: flex-start; // Was flex-start, but typically flex-end for dialogs
    gap: 12px;
  }
}

.confirmDialogButton {
  height: 40px;
  padding-top: 0 !important; // Reset MUI button padding
  padding-bottom: 0 !important; // Reset MUI button padding
  padding-left: 14px !important;
  padding-right: 14px !important;
  background: var(--bg-primary);
  border-radius: 24px !important;
  border: 1px var(--border-primary) solid !important;
  // border-offset: -1px;
  color: var(--text-primary) !important;
  font-size: 16px !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 400 !important;
  line-height: 24px !important;
  letter-spacing: 0.20px !important;
  text-transform: none !important;
  box-shadow: none !important;

  &:hover {
    background: var(--bg-tertiary) !important; // A light hover for default button
    outline: 1px var(--border-primary) solid;
  }
}

.confirmDialogButtonDelete {
  composes: confirmDialogButton; // Inherit base styles
  background: var(--Fill-Error_BG, #f33d4f) !important;
  color: var(--text-primary) !important;
  outline: none !important; // Remove outline for delete button as per style
  font-weight: 500 !important;
  padding-left: 14px !important; // Specific padding from example
  padding-right: 14px !important; // Specific padding from example


  &:hover {
    background: #d03140 !important; // Darker shade for hover
  }
} 

.FAQText { 
  font-family: "Inter", sans-serif;
  font-weight: 600;
  text-decoration: inherit;
  color: inherit;
  

  &:hover {
    font-weight: 800;
  }
}