// Base Sidebar Variables
$sidebar-expanded-width: 378px;
$sidebar-collapsed-width: 125px; // Your recent value
$nav-menu-collapsed-width: 77px; // Your recent value for .collapsedNavMenu

// Animation
$sidebar-transition-duration: 0.4s;
$sidebar-transition-timing: ease-in-out;

.sidebar {
  background-color: #ffffff;
  height: 100%;
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  box-sizing: border-box;
  border-right: 1px solid #cacaca;
  overflow-x: hidden; // CRUCIAL for clipping the slidingContainer
  position: relative; // For any absolute children if ever needed again (like overlay toggle)
  transition: width $sidebar-transition-duration $sidebar-transition-timing;
  overflow-y: hidden;

  // Custom scrollbar styles (can remain if panes need internal scrolling)
  &::-webkit-scrollbar {
    width: 14px;
  }
  &::-webkit-scrollbar-track {
    background: transparent;
    border-radius: 4px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0);
    border-radius: 4px;
    border: 2px solid transparent;
    background-clip: content-box;
    transition: background-color 0.3s ease-in-out;
  }
  &:hover::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.25);
  }
  scrollbar-width: thin;
  scrollbar-color: transparent transparent;
  &:hover {
    scrollbar-color: rgba(255, 255, 255, 0.25) transparent;
  }
}

.slidingContainer {
  display: flex;
  // flex-shrink: 0;
  width: calc($sidebar-expanded-width + $sidebar-collapsed-width);
  flex-grow: 1;
  min-height: 0;
  transition: transform $sidebar-transition-duration $sidebar-transition-timing;
  will-change: transform;
}

// Common styles for panes (excluding height and specific overflow-y)
.paneBase {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  // flex-shrink: 0;
  overflow-x: hidden;
}

.expandedPane {
  @extend .paneBase; // Inherit common styles
  width: $sidebar-expanded-width;
  overflow-y: auto;
  height: 100%; // Specific to expandedPane
}

.collapsedPane {
  @extend .paneBase; // Inherit common styles
  width: $sidebar-collapsed-width;
  align-items: center;
  padding-top: 20px;
  padding-bottom: 20px;
  flex-shrink: 0;
  overflow-y: hidden; // Specific to collapsedPane
}

// Styles for SidebarHeader (used once, above panes)
.sidebarHeaderContainer {
  display: flex;
  flex-direction: column;
  padding: 17px 31px;

  &.collapsed {
    padding: 17px 12px;
  }
}

// Styles for expanded content area (within .expandedPane)
.expandedContentArea {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 100%;
  min-height: 0;
  padding: 17px 31px;
}

.sidebarContent { // Contains ChatList
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
}

// Styles for the new navigation menu (within .collapsedPane)
.collapsedNavMenu {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  width: $nav-menu-collapsed-width;
  box-sizing: border-box;
}

.collapsedNavItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
  cursor: pointer;
  padding: 8px 0;
  width: 100%;
  box-sizing: border-box;

  .navItemIcon {
    img, svg {
      width: 24px;
      height: 24px;
      color: #1e1e1e;
    }
  }
  .navItemText {
    font-family: 'Inter', sans-serif;
    font-size: 14px;
    font-weight: 400;
    color: #757575;
    text-align: center;
    line-height: 1.2;
  }
  &:hover {
    .navItemIcon img, .navItemIcon svg {
      color: #007bff;
    }
    .navItemText {
      color: #1e1e1e;
    }
  }
}

// REMOVE OLD/UNUSED STYLES
// .sidebarCollapsed class (the one applied to .sidebar) is no longer needed for these specific overrides
// .sidebarInnerWrapper is removed
// .sidebar.sidebarCollapsed .projectPanelContainer, etc. are removed
// Specific .sidebar.sidebarCollapsed .sidebarHeaderContainer is removed

// Keep .sidebarHeaderIconRow, .sidebarHeaderLogoRow, .logoTextBold, .logoTextNormal as they are used by SidebarHeader.tsx
// The styling for these might need slight adjustment if their container's padding changes significantly
// but SidebarHeader.tsx logic largely controls their appearance based on isSidebarCollapsed.

.sidebarHeaderIconRow { 
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 48px;
  width: 100%;
  color: white; 
  box-sizing: border-box; 
  svg {
    color: #b3b3b3;
  }
  :global(.MuiIconButton-root) {
    color: white;
  }
}

.sidebarHeaderLogoRow {
  display: flex;
  align-items: center;
  padding: 8px 12px; // This is the padding for the logo row *within* the header container
  border-radius: 8px; 
  gap: 8px; 
  height: 48px;
  width: 100%; 
  box-sizing: border-box; 
}

.sidebarHeaderLogoImage {
  width: 32px;
  height: 32px;
  border-radius: 4px; 
}

.sidebarHeaderLogoTextContainer { 
  display: flex; 
  color: #1e1e1e;
  font-family: 'Montserrat', sans-serif; 
  font-size: 20px; 
  letter-spacing: 0.80px; 
  font-weight: 600;
  line-height: 1.2; 
}

.logoTextBold {
  font-family: 'Montserrat', sans-serif;
  font-weight: 600; 
  font-size: 20px;
  letter-spacing: 0.80px;
}

.logoTextNormal {
  font-family: 'Montserrat', sans-serif;
  font-weight: 500; 
  font-size: 20px;
  letter-spacing: 0.80px;
}

// Styles for ProjectPanel, AccessPanel can remain if they are self-contained
// or if they relied on .sidebarContent structure which is preserved.

// .sidebarFooter and .sidebarToggleButton might need adjustment if their positioning
// was relative to the old .sidebar structure. For now, assuming they are okay or handled elsewhere. 

// Dedicated styles for the sidebar toggle button (used in ChatLayout.tsx)
.sidebarToggleButton {
  position: absolute !important; // !important to override MUI if needed, but use with caution
  top: 50%; 
  // The 'left' positioning is handled by inline styles in ChatLayout.tsx based on sidebar state
  transform: translateY(-50%); // Vertically center the button on its 'left' edge
  z-index: 100; // Ensure it's above sidebar, but below potential full-screen overlays
  background-color: #FFFFFF !important; 
  border: 1px solid #E0E0E0 !important; 
  border-radius: 50% !important; 
  width: 32px !important; 
  height: 32px !important; 
  padding: 4px !important; 
  box-shadow: 0 2px 8px rgba(0,0,0,0.15) !important;

  // Icon styling within the button
  svg {
    font-size: 20px; // Adjust as needed
    color: #5F6368; // Icon color
  }

  &:hover {
    background-color: #F8F9FA !important; 
    box-shadow: 0 4px 12px rgba(0,0,0,0.2) !important;
  }
} 