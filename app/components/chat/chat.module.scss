@import "@/app/styles/animation.scss";

/* =========================== */
/* ===== General Layout ===== */
/* =========================== */

.chat {
  display: flex;
  flex-direction: column;
  height: 100%; /* Or 100vh depending on parent */
  overflow: hidden;
  /* background-color: aqua; */ /* Debug color */
}

.window-content {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative; /* For potential absolute children */
}

.chat-body-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden; /* Contains chat-body and chat-input-panel */
  /* background-color: gray; */ /* Debug color */
}

.chat-body {
  flex-grow: 1; /* Takes available space */
  overflow-y: auto; /* Enables message scrolling */
  overflow-x: hidden;
  padding: 20px 0; // Removed horizontal padding
  padding-bottom: 120px; /* Space below last message, adjust as needed */
  position: relative; /* For potential absolute children like dividers */
  overscroll-behavior: none; /* Prevents scrolling chain */
  /* height: 100%; */ /* Usually not needed with flex-grow: 1 */
  /* background-color: green; */ /* Debug color */
  /* max-height: calc(100vh - 200px); */ /* Conflicts with flex-grow, likely unnecessary */
}

/* Styles potentially related to a title within chat-body, might be less common */
.chat-body-main-title {
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }
}

@media only screen and (max-width: 600px) {
  .chat-body-title {
    text-align: center;
  }
}

/* Style for main chat view containing sidebar toggle */
.chat-main {
  display: flex;
  height: 100%;
  width: 100%;
  position: relative;
  overflow: hidden;

  /* .chat-body-container styles are inherited from above */

  /* Side panel, likely for settings or context */
  .chat-side-panel {
    position: absolute;
    inset: 0;
    background: var(--white);
    overflow: hidden;
    z-index: 10;
    transform: translateX(100%);
    transition: all ease 0.3s;
    &-show {
      transform: translateX(0);
    }
  }
}


/* ======================== */
/* ===== Chat Messages ===== */
/* ======================== */

.chat-message {
  display: flex;
  flex-direction: row;
  margin-bottom: 10px; /* Add some space between messages */
  width: 60%; /* Limit message row width */
  margin-left: auto; /* Center the message row */
  margin-right: auto; /* Center the message row */
}

.chat-message-user {
  flex-direction: row-reverse;

  .chat-message-header {
    flex-direction: row-reverse;
  }
}

.chat-message-header {
  margin-top: 0px;
  display: flex;
  align-items: center;
  /* Removed chat-message-actions from here */

  .chat-model-name {
    font-size: 12px;
    color: var(--black);
    margin-left: 6px;
  }
}

.chat-message-container {
  max-width: var(--message-max-width);
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  /* Hover effect to show actions */
  &:hover {
    .chat-message-edit { /* Edit action on avatar */
      opacity: 0.9;
    }

    .chat-message-actions {
      opacity: 1;
      pointer-events: all;
      transform: scale(1) translateY(0);
    }
  }
}

/* Align user messages to the right */
.chat-message-user > .chat-message-container {
  align-items: flex-end;
}

.chat-message-avatar {
  /* position: relative; */ // No longer needed if hidden
  display: none; // Hide the avatar element

  /* .chat-message-edit removed as avatar is hidden */
}

/* Message content bubble */
.chat-message-item {
  box-sizing: border-box;
  max-width: 100%;
  margin-top: 10px;
  border-radius: 24px;
  // background-color: rgba(0, 0, 0, 0.05); /* REMOVED Default bubble color for bot */
  padding: 0px 16px; /* Adjusted padding */
  font-size: 1rem; // Use rem for better accessibility
  user-select: text;
  word-break: break-word;
  border: none; // Ensure no border for bot message
  position: relative;
  transition: all ease 0.3s;
}

/* User message bubble color and styling */
.chat-message-user > .chat-message-container > .chat-message-item {
  background-color: var(--second) !important; /* User bubble color - added !important */
  border: var(--border-in-light) !important; // Add border only to user bubble - added !important
  border-radius: 16px !important; // Slightly larger radius - added !important
  /* &:hover { min-width: 0; } */ /* Seems unnecessary */
}

/* Actions container below message */
.chat-message-actions {
  display: flex;
  box-sizing: border-box;
  font-size: 12px;
  align-items: center; // Vertically center buttons
  justify-content: flex-start; // Align buttons to the start (left for bot, right for user due to row-reverse)
  transition: all ease 0.3s;
  margin: 8px 0 0 0; // Add margin top, remove horizontal margin
  opacity: 0; // Make initially invisible
  pointer-events: none; // Make initially non-interactive
  width: 100%; // Take full width
  padding: 0 5px; // Add slight padding

  /* Uses the same action styles as input panel, but nowrap */
  .chat-input-actions { 
    display: flex;
    flex-wrap: nowrap; 
    gap: 8px; // Add gap between action buttons
  }
}

/* Date/time stamp below message - push below actions */
.chat-message-action-date {
  font-size: 12px;
  opacity: 0.5; // Increase visibility slightly
  white-space: nowrap;
  transition: all ease 0.6s;
  color: var(--black);
  text-align: right;
  width: 100%;
  box-sizing: border-box;
  padding-right: 10px;
  padding-top: 4px; /* Space above date */
  pointer-events: none;
  z-index: 1;
  margin-top: 4px; // Add margin to push below actions
}

/* Image styling within messages */
.chat-message-item-image {
  width: 100%;
  margin-top: 10px;
  display: block; /* Ensure it behaves like a block */
}

.chat-message-item-images { /* Grid layout for multiple images */
  width: 100%;
  display: grid;
  justify-content: left;
  grid-gap: 10px;
  grid-template-columns: repeat(var(--image-count), auto);
  margin-top: 10px;
}

.chat-message-item-image-multi {
  object-fit: cover;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.chat-message-item-image,
.chat-message-item-image-multi {
  box-sizing: border-box;
  border-radius: 10px;
  border: rgba($color: #888, $alpha: 0.2) 1px solid;
  background-color: var(--white); /* Background for transparent images */
}

/* Responsive image sizing */
@media only screen and (max-width: 600px) {
  $calc-image-width: calc(100vw / 3 * 2 / var(--image-count));

  .chat-message-item-image-multi {
    width: $calc-image-width;
    height: $calc-image-width;
  }

  .chat-message-item-image {
    max-width: calc(100vw / 3 * 2);
  }
}

@media screen and (min-width: 600px) {
  $max-image-width: calc(
    calc(1200px - var(--sidebar-width)) / 3 * 2 / var(--image-count)
  );
  $image-width: calc(
    calc(var(--window-width) - var(--sidebar-width)) / 3 * 2 /
      var(--image-count)
  );

  .chat-message-item-image-multi {
    width: $image-width;
    height: $image-width;
    max-width: $max-image-width;
    max-height: $max-image-width;
  }

  .chat-message-item-image {
    max-width: calc(calc(1200px - var(--sidebar-width)) / 3 * 2);
  }
}

/* Less common message elements */
.chat-message-status {
  font-size: 12px;
  color: #aaa;
  line-height: 1.5;
  margin-top: 5px;
}

.chat-message-tools {
  font-size: 12px;
  color: #aaa;
  line-height: 1.5;
  margin-top: 5px;
  .chat-message-tool {
    display: flex;
    align-items: end;
    svg {
      margin-left: 5px;
      margin-right: 5px;
    }
  }
}

.chat-message-audio {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: 10px;
  background-color: rgba(0, 0, 0, 0.05);
  border: var(--border-in-light);
  position: relative;
  transition: all ease 0.3s;
  margin-top: 10px;
  padding: 5px 10px; /* Add padding */
  font-size: 14px;
  user-select: text;
  word-break: break-word;
  box-sizing: border-box;
  audio {
    height: 30px;
  }
}


/* ========================= */
/* ===== Chat Input Panel ===== */
/* ========================= */

/* Container pushed to bottom by .chat-body's flex-grow - NOW STYLED */
.chat-input-panel {
  padding: 16px 16px; // Vertical/Horizontal padding
  background-color: var(--white); // Use theme white
  border: 1.5px solid var(--border-primary); // Use theme border
  border-radius: 24px; // Rounded corners
  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.05); // Slight shadow
  margin: 32px auto; // Center horizontally, keep vertical margin
  width: calc(60%); // Adjust width for margin
  box-sizing: border-box;
  position: relative; // Add relative positioning context
  // position: sticky; // Keep sticky behavior if needed - User commented out
  bottom: 0;
  z-index: 1;
  // &:focus-within {
  //   border-color: var(--black);
  // }
}

/* Inner container holding textarea, actions, etc. */
.chat-input-panel-inner-container {
  position: relative; /* For positioning buttons like scroll-to-bottom */
}

/* The actual input bar with text area and button */
.chat-input-panel-inner {
  position: relative;
  display: flex;
  /* max-width: 800px; */ /* Limit width - Removed, controlled by outer panel margin */
  /* margin: 0 auto; */ /* Removed */
  background-color: transparent; // Inherit from panel
  border: none;
  padding: 8px 12px; // Adjusted padding
  padding-right: 48px; /* Space for send button - Adjusted below */
  align-items: flex-end; /* Align items (textarea, button) to bottom */
  gap: 0.75rem;
}

.chat-input-panel-inner-attach { // Style when images are attached
  /* Add specific styles if needed when images are present */
}

/* Textarea */
.chat-input {
  flex: 1; /* Takes available horizontal space */
  width: 100%; /* Takes full width */
  /* height: 100%; */ /* Height is controlled by rows/content */
  border: none;
  background: transparent;
  outline: none;
  font-size: 1rem; // Use rem
  color: var(--black);
  resize: none;
  padding: 0;
  min-height: 24px; /* Minimum height for one line */
  max-height: 200px; /* Limit auto-grow height */
  line-height: 1.5;
  
  &::placeholder {
    color: #999; // Slightly lighter placeholder
  }
}

/* Send button / Stop button */
.chat-input-send {
  position: absolute !important; // Force absolute positioning
  right: 16px; // Position 16px from right border (matching panel padding)
  bottom: 16px; // Position 16px from bottom border (matching panel padding)
  /* display: flex; */ // Already handled by MUI Button
  /* align-items: center; */
  /* justify-content: center; */
  /* padding: 8px; */ // Padding handled by MUI Button sizing
  border-radius: 50% !important; // Make circular (override MUI default)
  min-width: 40px !important; // Ensure size
  width: 40px !important; // Fixed size
  height: 40px !important; // Fixed size
  background-color: var(--black) !important; // Force background color
  color: var(--white) !important; // Force icon/text color to white
  /* color: var(--white); */ // Handled by MUI
  /* border: none; */ // Handled by MUI
  transition: all 0.3s ease;
  cursor: pointer;
  z-index: 2; // Ensure button is above other content within the panel

  /* Override MUI icon margin if needed */
  // .MuiButton-endIcon { // User commented out
  //    margin-left: 0 !important;
  //    margin-right: 0 !important;
  // }
  /* Hide text label within the button */
  .MuiButton-label, span:not([class*="MuiSvgIcon"]) { // More robust selector
    display: none;
  }

  &:disabled {
    /* opacity: 0.5; */ // Handled by MUI
    cursor: not-allowed;
  }

  &:not(:disabled):hover {
    background-color: var(--black) !important; // Keep background black on hover
    box-shadow: none !important; // Remove any hover shadow
    svg {
      opacity: 0.8; // Reduce icon opacity on hover
    }
  }

  svg { // Target the SVG icon inside the button
    stroke-width: 1.5; // Increase stroke width for a bolder look
    stroke: var(--white); // Ensure stroke is white
    fill: var(--white); // Ensure fill is white
    transition: opacity 0.3s ease; // Add transition for opacity change
  }
}

/* Action buttons container (e.g., settings, prompts) */
.chat-input-actions {
  display: flex;
  flex-wrap: wrap; /* Allow wrapping */
  /* justify-content: space-between; */ /* Removed for consistent spacing with gap */
  gap: 10px;
  align-items: center;
  padding-bottom: 8px; /* Space below actions, shown above input */
  padding-left: 10px; /* Align with input padding */

  &-end { /* Group pushed to the right */
    display: flex;
    margin-left: auto;
    gap: 5px;
  }

  /* Individual action button */
  .chat-input-action {
    display: inline-flex;
    border-radius: 50%; // Make circular by default
    font-size: 12px;
    // background-color: var(--white);
    color: var(--black);
    // border: var(--border-in-light);
    padding: 0; // Remove padding to respect width/height
    // animation: slide-in ease 0.3s;
    // box-shadow: var(--card-shadow);
    // transition: width ease 0.3s, background-color ease 0.2s; /* Added background transition */
    align-items: center;
    justify-content: center; // Center icon horizontally
    height: 36px; /* Default height */
    width: 36px; // Default width
    overflow: hidden;
    cursor: pointer;

    .text {
      white-space: nowrap;
      padding-left: 5px;
      opacity: 0;
      transform: translateX(-5px);
      transition: all ease 0.3s;
      pointer-events: none;
    }

    &:hover {
      background-color: var(--bg-primary); /* Add hover effect */
      border-radius: 8px; // Make square on hover
      /* Hover text reveal might be better handled differently if needed */
      /* width: var(--full-width); */
      /* transition-delay: var(--delay); */
      /* .text { */
        /* transition-delay: var(--delay); */
        /* opacity: 1; */
        /* transform: translate(0); */
      /* } */
    }

    .text,
    .icon {
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

/* Attached images preview */
.attach-images {
  /* position: absolute; */ /* Positioning handled by flex layout now */
  /* left: 30px; */
  /* bottom: 32px; */
  display: flex;
  gap: 10px; /* Add gap between images */
  padding-bottom: 8px; /* Space below images, shown above input */
  padding-left: 10px; /* Align with input padding */
}

.attach-image {
  cursor: default;
  width: 64px;
  height: 64px;
  border: rgba($color: #888, $alpha: 0.2) 1px solid;
  border-radius: 5px;
  /* margin-right: 10px; */ /* Replaced by gap */
  background-size: cover;
  background-position: center;
  background-color: var(--white);
  position: relative; /* For mask/delete button */

  .attach-image-mask {
    position: absolute; /* Position mask over image */
    inset: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4); /* Darken mask */
    opacity: 0;
    transition: all ease 0.2s;
    display: flex; /* Center delete button */
    align-items: center;
    justify-content: center;
    border-radius: 5px; /* Match parent */
  }

  &:hover .attach-image-mask {
    opacity: 1;
  }

  .delete-image {
    width: 24px;
    height: 24px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
    /* float: right; */ /* Replaced by flex centering in mask */
    background-color: var(--white);
    color: var(--black); /* Ensure icon color is visible */
  }
}

/* Old fixed position input container - Commented out as likely unused */
/*
.chat-input-container {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 20px;
}
*/


/* ============================== */
/* ===== Other UI Components ===== */
/* ============================== */

/* Toast notification for showing prompts */
.prompt-toast {
  position: absolute;
  bottom: -50px; /* Adjust position if needed */
  left: 0;
  right: 0;
  z-index: 999;
  display: flex;
  justify-content: center;
  width: calc(100% - 40px); /* Centered width */
  margin: 0 auto; /* Center horizontally */
  pointer-events: none; /* Allow clicks through */

  .prompt-toast-inner {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    background-color: var(--white);
    color: var(--black);

    border: var(--border-in-light);
    box-shadow: var(--card-shadow);
    padding: 10px 20px;
    border-radius: 100px;

    animation: slide-in-from-top ease 0.3s;
    pointer-events: auto; /* Re-enable pointer events for the toast itself */

    .prompt-toast-content {
      margin-left: 10px;
    }
  }
}

/* Generic section title style */
.section-title {
  font-size: 12px;
  font-weight: bold;
  margin-bottom: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;

  .section-title-action {
    display: flex;
    align-items: center;
  }
}

/* Context prompt editing UI (in modal or sidebar?) */
.context-prompt {
  .context-prompt-insert {
    display: flex;
    justify-content: center;
    padding: 4px;
    opacity: 0.2;
    transition: all ease 0.3s;
    background-color: rgba(0, 0, 0, 0);
    cursor: pointer;
    border-radius: 4px;
    margin-top: 4px;
    margin-bottom: 4px;

    &:hover {
      opacity: 1;
      background-color: rgba(0, 0, 0, 0.05);
    }
  }

  .context-prompt-row {
    display: flex;
    justify-content: center;
    align-items: center; /* Vertically align items */
    width: 100%;
    gap: 10px; /* Add gap between elements */

    &:hover {
      .context-drag {
        opacity: 1;
      }
    }

    .context-drag {
      display: flex;
      align-items: center;
      opacity: 0.5;
      transition: all ease 0.3s;
      cursor: grab;
    }

    .context-role {
      /* margin-right: 10px; */ /* Replaced by gap */
      font-weight: bold;
    }

    .context-content {
      flex: 1;
      max-width: 100%;
      text-align: left;
    }

    .context-delete-button {
      /* margin-left: 10px; */ /* Replaced by gap */
    }
  }

  .context-prompt-button {
    flex: 1;
  }
}

/* Display for memory prompt (if used) */
.memory-prompt {
  margin: 20px 0;

  .memory-prompt-content {
    background-color: var(--white);
    color: var(--black);
    border: var(--border-in-light);
    border-radius: 10px;
    padding: 10px;
    font-size: 12px;
    user-select: text;
  }
}

/* Divider/button for clearing context */
.clear-context {
  margin: 20px 0 0 0;
  padding: 4px 0;

  border-top: var(--border-in-light);
  border-bottom: var(--border-in-light);
  box-shadow: var(--card-shadow) inset;

  display: flex;
  justify-content: center;
  align-items: center;

  color: var(--black);
  transition: all ease 0.3s;
  cursor: pointer;
  overflow: hidden;
  position: relative;
  font-size: 12px;

  animation: slide-in ease 0.3s;

  $linear: linear-gradient(
    to right,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 1),
    rgba(0, 0, 0, 0)
  );
  mask-image: $linear;

  /* Mixins for show/hide animation */
  @mixin show {
    transform: translateY(0);
    position: relative;
    transition: all ease 0.3s;
    opacity: 1;
  }

  @mixin hide {
    transform: translateY(-50%);
    position: absolute;
    transition: all ease 0.1s;
    opacity: 0;
  }

  &-tips {
    @include show;
    opacity: 0.5;
  }

  &-revert-btn {
    color: var(--primary);
    @include hide;
  }

  &:hover {
    opacity: 1;
    border-color: var(--primary);

    .clear-context-tips {
      @include hide;
    }

    .clear-context-revert-btn {
      @include show;
    }
  }
}

/* Shortcut key display modal */
.shortcut-key-container {
  padding: 10px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.shortcut-key-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: 16px;
}

.shortcut-key-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  overflow: hidden;
  padding: 10px;
  background-color: var(--white);
}

.shortcut-key-title {
  font-size: 14px;
  color: var(--black);
}

.shortcut-key-keys {
  display: flex;
  gap: 8px;
}

.shortcut-key {
  display: flex;
  align-items: center;
  justify-content: center;
  border: var(--border-in-light);
  border-radius: 8px;
  padding: 4px;
  background-color: var(--gray);
  min-width: 32px;
}

.shortcut-key span {
  font-size: 12px;
  color: var(--black);
}

/* Scroll to bottom button positioned in the chat view (original class) */
.scroll-to-bottom-chatview {
  /* Inherits .chat-input-action base styles (circular, hover etc.) */
  /* Fixed positioning removed, handled by wrapper */
}

/* Wrapper div for the scroll-to-bottom button to handle dynamic positioning */
.scroll-to-bottom-chatview-wrapper {
  position: absolute; /* Position relative to chat-body-container */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Adjust for button width */
  z-index: 10; /* Ensure it's above messages */
  /* bottom property is set dynamically via inline style */
}