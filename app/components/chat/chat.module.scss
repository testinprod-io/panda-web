@import "@/app/styles/animation.scss";

/* =========================== */
/* ===== General Layout ===== */
/* =========================== */

.chat {
  display: flex;
  flex-direction: column;
  height: 100%; /* Or 100vh depending on parent */
  overflow: hidden;
  /* background-color: aqua; */ /* Debug color */
}

.window-content {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative; /* For potential absolute children */
}

.chat-body-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden; /* Contains chat-body and chat-input-panel */
  /* background-color: gray; */ /* Debug color */
}

.chat-body {
  flex-grow: 1; /* Takes available space */
  overflow-y: auto; /* Enables message scrolling */
  overflow-x: hidden;
  padding: 20px 0; // Removed horizontal padding
  padding-bottom: 120px; /* Space below last message, adjust as needed */
  position: relative; /* For potential absolute children like dividers */
  overscroll-behavior: none; /* Prevents scrolling chain */
  /* height: 100%; */ /* Usually not needed with flex-grow: 1 */
  /* background-color: green; */ /* Debug color */
  /* max-height: calc(100vh - 200px); */ /* Conflicts with flex-grow, likely unnecessary */
}

/* Styles potentially related to a title within chat-body, might be less common */
.chat-body-main-title {
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }
}

@media only screen and (max-width: 600px) {
  .chat-body-title {
    text-align: center;
  }
}

/* Style for main chat view containing sidebar toggle */
.chat-main {
  display: flex;
  height: 100%;
  width: 100%;
  position: relative;
  overflow: hidden;

  /* .chat-body-container styles are inherited from above */

  /* Side panel, likely for settings or context */
  .chat-side-panel {
    position: absolute;
    inset: 0;
    background: var(--white);
    overflow: hidden;
    z-index: 10;
    transform: translateX(100%);
    transition: all ease 0.3s;
    &-show {
      transform: translateX(0);
    }
  }
}


/* ======================== */
/* ===== Chat Messages ===== */
/* ======================== */

.chat-message {
  display: flex;
  flex-direction: row;
  margin-bottom: 10px; /* Add some space between messages */
  width: 60%; /* Default width for larger screens */
  margin-left: auto; /* Center the message row */
  margin-right: auto; /* Center the message row */

  @media (max-width: 1024px) {
    width: 80%; /* Increase width for medium screens */
  }

  @media (max-width: 768px) {
    width: 95%; /* Further increase width for small screens */
  }
}

.chat-message-user {
  flex-direction: row-reverse;

  .chat-message-header {
    flex-direction: row-reverse;
  }
}

.chat-message-header {
  margin-top: 0px;
  display: flex;
  align-items: center;
  /* Removed chat-message-actions from here */

  .chat-model-name {
    font-size: 12px;
    color: var(--black);
    margin-left: 6px;
  }
}

.chat-message-container {
  max-width: var(--message-max-width);
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  /* Hover effect to show actions */
  &:hover {
    .chat-message-edit { /* Edit action on avatar */
      opacity: 0.9;
    }

    .chat-message-actions {
      opacity: 1;
      pointer-events: all;
      transform: scale(1) translateY(0);
    }
  }
}

/* Align user messages to the right */
.chat-message-user > .chat-message-container {
  align-items: flex-end;
}

.chat-message-avatar {
  /* position: relative; */ // No longer needed if hidden
  display: none; // Hide the avatar element

  /* .chat-message-edit removed as avatar is hidden */
}

/* Message content bubble */
.chat-message-item {
  box-sizing: border-box;
  max-width: 100%;
  margin-top: 10px;
  border-radius: 24px; // Default for bot
  // background-color: rgba(0, 0, 0, 0.05); /* REMOVED Default bubble color for bot */
  padding: 0px 16px; /* Adjusted padding */
  font-size: 1rem; // Default font size, will be overridden by prop for content
  user-select: text;
  word-break: break-word;
  border: none; // Ensure no border for bot message
  position: relative;
  transition: all ease 0.3s;
}

/* User message bubble color and styling */
.chat-message-user > .chat-message-container > .chat-message-item {
  background-color: #F3F3F3 !important; /* User bubble color */
  border: none !important; // No border for user bubble
  box-shadow: none !important; // No shadow for user bubble
  border-radius: 48px !important; // User message corner radius
  /* &:hover { min-width: 0; } */ /* Seems unnecessary */
}

/* Actions container below message */
.chat-message-actions {
  display: flex;
  box-sizing: border-box;
  font-size: 12px;
  align-items: center; // Vertically center buttons
  justify-content: flex-start; // Align buttons to the start (left for bot, right for user due to row-reverse)
  transition: all ease 0.3s;
  margin: 0; // Add margin top, remove horizontal margin
  opacity: 0; // Make initially invisible
  pointer-events: none; // Make initially non-interactive
  width: 100%; // Take full width
  padding: 0; // Add slight padding

  /* Uses the same action styles as input panel, but nowrap */
  .chat-input-actions { 
    display: flex;
    flex-wrap: nowrap; 
    // gap: 8px; // Add gap between action buttons
  }
}

/* Date/time stamp below message - push below actions */
.chat-message-action-date {
  font-size: 12px;
  opacity: 0.5; // Increase visibility slightly
  white-space: nowrap;
  transition: all ease 0.6s;
  color: var(--black);
  text-align: right;
  width: 100%;
  box-sizing: border-box;
  padding-right: 10px;
  padding-top: 4px; /* Space above date */
  pointer-events: none;
  z-index: 1;
  margin-top: 4px; // Add margin to push below actions
}

/* Image styling within messages */
.chat-message-item-image {
  width: 100%;
  margin-top: 10px;
  display: block; /* Ensure it behaves like a block */
}

.chat-message-item-images { /* Grid layout for multiple images */
  width: 100%;
  display: grid;
  justify-content: left;
  grid-gap: 10px;
  grid-template-columns: repeat(var(--image-count), auto);
  margin-top: 10px;
}

.chat-message-item-image-multi {
  object-fit: cover;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.chat-message-item-image,
.chat-message-item-image-multi {
  box-sizing: border-box;
  border-radius: 10px;
  border: rgba($color: #888, $alpha: 0.2) 1px solid;
  background-color: var(--white); /* Background for transparent images */
}

/* Responsive image sizing */
@media only screen and (max-width: 600px) {
  $calc-image-width: calc(100vw / 3 * 2 / var(--image-count));

  .chat-message-item-image-multi {
    width: $calc-image-width;
    height: $calc-image-width;
  }

  .chat-message-item-image {
    max-width: calc(100vw / 3 * 2);
  }
}

@media screen and (min-width: 600px) {
  $max-image-width: calc(
    calc(1200px - var(--sidebar-width)) / 3 * 2 / var(--image-count)
  );
  $image-width: calc(
    calc(var(--window-width) - var(--sidebar-width)) / 3 * 2 /
      var(--image-count)
  );

  .chat-message-item-image-multi {
    width: $image-width;
    height: $image-width;
    max-width: $max-image-width;
    max-height: $max-image-width;
  }

  .chat-message-item-image {
    max-width: calc(calc(1200px - var(--sidebar-width)) / 3 * 2);
  }
}

/* Less common message elements */
.chat-message-status {
  font-size: 12px;
  color: #aaa;
  line-height: 1.5;
  margin-top: 5px;
}

.chat-message-tools {
  font-size: 12px;
  color: #aaa;
  line-height: 1.5;
  margin-top: 5px;
  .chat-message-tool {
    display: flex;
    align-items: end;
    svg {
      margin-left: 5px;
      margin-right: 5px;
    }
  }
}

.chat-message-audio {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-radius: 10px;
  background-color: rgba(0, 0, 0, 0.05);
  border: var(--border-in-light);
  position: relative;
  transition: all ease 0.3s;
  margin-top: 10px;
  padding: 5px 10px; /* Add padding */
  font-size: 14px;
  user-select: text;
  word-break: break-word;
  box-sizing: border-box;
  audio {
    height: 30px;
  }
}


/* ========================= */
/* ===== Chat Input Panel ===== */
/* ========================= */

/* Container pushed to bottom by .chat-body's flex-grow - NOW STYLED */
.chat-input-panel {
  padding: 16px; // Figma: padding 16
  background-color: #ffffff; // Figma: background white
  border: 1px solid #CACACA; // Figma: outline: 1px #CACACA solid
  outline-offset: -1px; // Figma
  border-radius: 24px; // Figma
  box-shadow: 0px 2px 7px rgba(0, 0, 0, 0.20); // Figma
  margin: 32px auto; // Center horizontally, keep vertical margin
  width: 60%; // Default width, same as chat content
  box-sizing: border-box;
  position: relative;
  bottom: 0;
  z-index: 1;
  display: flex; // New
  flex-direction: column; // New
  gap: 10px; // Figma: parent gap 10

  @media (max-width: 1024px) {
    width: 80%; /* Increase width for medium screens */
  }

  @media (max-width: 768px) {
    width: 95%; /* Further increase width for small screens */
  }
}

/* Attached files preview styles - adjust if needed */
.attach-files-preview {
  display: flex;
  gap: 10px;
  // padding: 0px 0px 8px 0px; // Adjusted to have no horizontal padding directly, panel has it.
  flex-wrap: wrap;
  // No specific height mentioned, let it be determined by content
}

/* Main area for the text input */
.chat-input-main-area {
  align-self: stretch; // Figma
  display: flex; // To potentially add the vertical bar later if desired
  align-items: center; // To align bar and textarea
  gap: 8px; // Space for the bar if it was added
  min-height: 32px; // Default height for the area
  margin-bottom: 16px; // Space to the controls-row below
}

.chat-input-label { // New class to wrap textarea, if needed for styling like the vertical bar
  display: flex;
  flex-grow: 1;
  align-items: center; // Align items to bottom if textarea grows
}

/* Textarea */
.chat-input {
  flex: 1; /* Takes available horizontal space */
  width: 100%; /* Takes full width */
  border: none;
  background: transparent;
  outline: none;
  font-size: 16px; // Figma
  font-family: 'Inter', sans-serif; // Figma, with fallback
  font-weight: 400; // Figma
  color: var(--black); // Input text color
  resize: none;
  padding: 0; // Remove default padding
  min-height: 32px; /* Minimum height for one line based on Figma line-height */
  max-height: 200px; /* Limit auto-grow height */
  line-height: 32px; // Figma

  &::placeholder {
    color: #CACACA; // Figma placeholder color
    font-family: 'Inter', sans-serif; // Ensure placeholder also uses Inter
    font-weight: 400; // Figma
    font-size: 16px; // Figma
    line-height: 32px; // Figma
  }
}

/* Controls row for buttons */
.chat-input-controls-row {
  align-self: stretch; // Figma
  display: flex;
  justify-content: space-between; // Figma
  align-items: center; // Figma
  // gap: 6px; // Figma gap within button groups, not between left/right
  // height: 40px; // Max height of the send button
}

.chat-input-controls-left {
  display: flex;
  align-items: center;
  // gap: 6px; // Figma
}

.chat-input-controls-right {
  display: flex;
  align-items: center;
  gap: 6px; // Figma
}

/* New Plus Button Style - using ChatAction */
.chat-input-action-plus-new {
  // This targets the ChatAction component wrapper.
  // ChatAction default styles might apply, we override as needed.
  // The Figma plus button: 32x32, padding 8, round, 1px #CACACA border
  width: 32px !important; // Figma
  height: 32px !important; // Figma
  padding: 0 !important; // Reset padding, icon size and its sx prop will handle inner spacing
  border-radius: 48px !important; // Figma (effectively circular)
  border: 1px solid #CACACA !important; // Figma (outline is border here)
  // outline-offset: -1px; // Handled by border directly
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  background-color: transparent !important; // Ensure no bg from ChatAction default

  svg { // Target icon within
    font-size: 16px !important; // Figma data-size="16" for icon container
    color: #757575 !important; // Figma icon color (var(--Icon-Default-Secondary, #757575))
    // The Figma shows a square outline for the plus, AddCircleOutlineIcon is circular.
    // To get a square plus, we'd need a different icon or custom SVG.
    // For now, using AddCircleOutlineIcon and styling its size/color.
  }

  img { // Target the custom SVG image
    display: block; // Helps with precise centering by removing inline characteristics
    // Width and height are set via inline styles in the TSX (16px)
  }

  &:hover {
    background-color: rgba(0, 0, 0, 0.05) !important; // Subtle hover
    border-color: #A0A0A0 !important;
  }
}


/* New Send button / Stop button Style */
.chat-input-send-new {
  // MUI Button overrides
  min-width: 40px !important; // Figma
  width: 40px !important; // Figma
  height: 40px !important; // Figma
  padding: 8px !important; // Figma
  background: #1E1E1E !important; // Figma
  border-radius: 48px !important; // Figma (circular)
  box-shadow: none !important; // No shadow from MUI default

  svg { // Target the SVG icon inside the button
    // Figma: icon container data-size="32", icon itself looks like 18.67x18.67
    // ArrowUpwardRoundedIcon and StopRoundedIcon should scale appropriately.
    // We need to ensure their color is #CACACA as per Figma's "outline" for the arrow.
    color: #F3F3F3 !important; // Figma send arrow "outline" color
    fill: #F3F3F3 !important; // Ensure fill for some icons
    stroke: #F3F3F3 !important; // Ensure stroke for outline icons like ArrowUpward
    stroke-width: 1.5; // Make icon a bit bolder if needed
  }

  &:hover:not(:disabled) {
    background: #E0E0E0 !important; // Slightly darker shade for hover
    box-shadow: none !important;
  }

  &:disabled {
    background: #F0F0F0 !important; // Lighter for disabled
    svg {
      color: #BDBDBD !important;
      fill: #BDBDBD !important;
      stroke: #BDBDBD !important;
    }
  }

  /* Hide text label within the button if any MUI default adds it */
  .MuiButton-label, span:not([class*="MuiSvgIcon"]) {
    display: none !important;
  }
}


/* Remove or comment out old/conflicting styles */

/* Inner container holding textarea, actions, etc. */
.chat-input-panel-inner-container {
  /* This class was wrapping the textarea and send button before. */
  /* Now textarea is in chat-input-main-area and buttons in chat-input-controls-row */
  /* Keep if still used for other purposes, or remove if redundant */
  position: relative; /* For positioning buttons like scroll-to-bottom if they are still inside */
  // display: flex; // Removed, new structure handles flex
  // align-items: flex-end; // Removed
  // gap: 0.75rem; // Removed
}

/* The actual input bar with text area and button - LARGELY REPLACED */
.chat-input-panel-inner {
  /* This class was on the <label> wrapping the textarea. Replaced by chat-input-label or similar */
  /* display: flex; */
  /* background-color: transparent; */
  /* border: none; */
  /* padding: 8px 12px; */
  /* padding-right: 48px; */ /* Space for send button - Handled by new layout */
  /* align-items: flex-end; */
  /* gap: 0.75rem; */
}

.chat-input-panel-inner-attach { // Style when images are attached
  /* Add specific styles if needed when images are present */
  /* This might not be needed if panel structure handles spacing correctly */
}


/* Old Send button / Stop button - COMMENT OUT or REMOVE*/
// .chat-input-send {
//   position: absolute !important;
//   right: 16px;
//   bottom: 16px;
//   border-radius: 50% !important;
//   min-width: 40px !important;
//   width: 40px !important;
//   height: 40px !important;
//   background-color: var(--black) !important;
//   color: var(--white) !important;
//   transition: all 0.3s ease;
//   cursor: pointer;
//   z-index: 2;

//   .MuiButton-label, span:not([class*="MuiSvgIcon"]) {
//     display: none;
//   }

//   &:disabled {
//     cursor: not-allowed;
//   }

//   &:not(:disabled):hover {
//     background-color: var(--black) !important;
//     box-shadow: none !important;
//     svg {
//       opacity: 0.8;
//     }
//   }

//   svg {
//     stroke-width: 1.5;
//     stroke: var(--white);
//     fill: var(--white);
//     transition: opacity 0.3s ease;
//   }
// }

/* Old Action buttons container - COMMENT OUT or REMOVE */
// .chat-input-actions {
//   display: flex;
//   flex-wrap: wrap;
//   align-items: center;
//   padding-left: 10px;

//   &-end {
//     display: flex;
//     margin-left: auto;
//   }

//   .chat-input-action {
//     display: inline-flex;
//     border-radius: 50%;
//     font-size: 8px;
//     color: var(--black);
//     padding: 0;
//     align-items: center;
//     justify-content: center;
//     height: 32px;
//     width: 32px;
//     overflow: hidden;
//     cursor: pointer;

//     .text {
//       white-space: nowrap;
//       padding-left: 5px;
//       opacity: 0;
//       transform: translateX(-5px);
//       transition: all ease 0.3s;
//       pointer-events: none;
//     }

//     .text,
//     .icon {
//       display: flex;
//       align-items: center;
//       justify-content: center;
//     }
//   }
// }

/* Old styles for file attachment UI - RETAIN and ensure compatibility */
/* .chat-input-actions-row was for the old plus button - COMMENT OUT or REMOVE */
// .chat-input-actions-row {
//   display: flex;
//   align-items: center;
//   padding: 0px 12px 8px 12px;
//   gap: 8px;
// }

/* .chat-input-action-plus was the old plus button style - COMMENT OUT or REMOVE */
// .chat-input-action-plus {
// }


// .attach-image, .attach-file-item styles should be reviewed to ensure they fit the new panel padding
.attach-file-item {
  cursor: default;
  position: relative;
  display: flex; // Changed from inline-flex to flex for consistency
  align-items: center;
  justify-content: center;
  overflow: hidden;
  // Common styling ends, specific styling below:
}

/* Styles for Document File Previews */
.attach-file-item-doc {
  padding: 16px;
  background: white;
  border-radius: 8px;
  border: 1px solid #CACACA; // Figma uses outline, border is more common for this
  // outline-offset: -1px; // Usually paired with outline
  gap: 8px; // Gap between icon area, info, and delete button
  align-items: flex-start; // Align items to the top
  width: auto; // Let width be determined by content up to a max
  min-width: 200px; // Ensure it's not too small
  max-width: 300px; // Prevent it from becoming too wide
  height: 80px; // Height based on content (icon is 48px + padding)
  justify-content: flex-start; // Align content to the start

  .doc-file-icon-bg {
    width: 48px;
    height: 48px;
    background: #F33D4F;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0; // Prevent shrinking
    // SVG icon inside is styled via its own attributes or can be targeted if needed
  }

  .doc-file-info {
    flex: 1 1 0; // Allow shrinking and growing
    display: flex;
    flex-direction: column;
    justify-content: center; // Vertically center text within the 48px effective height
    gap: 4px;
    min-width: 0; // Important for text truncation in flex children
    // height: 48px; // To match icon height, or let it be natural
  }

  .doc-file-name {
    color: black;
    font-size: 16px;
    font-family: 'Inter', sans-serif;
    font-weight: 600;
    word-wrap: break-word; // Should be default for divs, but explicit
    white-space: nowrap; // Prevent wrapping
    overflow: hidden; // Hide overflow
    text-overflow: ellipsis; // Add ...
    // max-width: 220px; // Figma specific, but flex should handle it with min-width on parent
  }

  .doc-file-type {
    color: #757575;
    font-size: 14px;
    font-family: 'Inter', sans-serif;
    font-weight: 400;
    word-wrap: break-word;
  }

  .doc-file-delete-button {
    width: 16px;
    height: 16px;
    background: transparent;
    border: none;
    padding: 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #757575; // Icon color from Figma for the 'x'
    flex-shrink: 0;

    &:hover {
      color: #333;
    }

    svg { // Targeting MUI CloseIcon
      font-size: 16px !important; // Ensure icon size matches button
    }
  }
}

/* Styles for Image File Previews */
.attach-file-item-image {
  width: 80px; // Keeping the old fixed size for images for now
  height: 80px;
  border-radius: 8px;
  background-size: cover;
  background-position: center;
  background-color: var(--bg-subtle, #f0f0f0); // Fallback if image is transparent/broken
  border: 1px solid var(--border-color, #e0e0e0);

  .attach-file-mask-image {
    width: 100%;
    height: 100%;
    padding: 8px; // Figma
    background: rgba(0, 0, 0, 0.20); // Figma
    border-radius: इन्हेरिट; // Inherit from parent
    display: flex;
    justify-content: flex-end; // Align delete button to top-right
    align-items: flex-start;
    opacity: 0; // Hidden by default, show on hover of .attach-file-item-image
    transition: opacity 0.2s ease-in-out;

    // Styling for the DeleteImageButton (assuming it's a button with an icon)
    // The DeleteImageButton component might have its own classes for the icon, adjust as needed.
    // This targets the button element directly if it's the child.
    .delete-image-button-wrapper { // Assuming DeleteImageButton creates a wrapper or style the button directly
      width: 28px; // Figma container for delete icon
      height: 28px;
      padding: 6px; // Figma
      // background: #757575; // Figma - this is for the icon's direct circular background
      // box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.25); // Figma
      // border-radius: 24px; // Figma - for the icon's circular background
      // outline: 1px #D9D9D9 solid; // Figma - for the icon's circular background
      display: flex;
      align-items: center;
      justify-content: center;
      // The actual icon (e.g. <CloseIcon /> from MUI) inside DeleteImageButton needs styling
      // If DeleteImageButton uses an SVG or specific element, target that.
      // For now, let's assume DeleteImageButton's default style is acceptable or will be made to fit.
      // The Figma design for this delete button is very specific and might require changes to DeleteImageButton itself.
      // For simplicity here, we're styling the mask. The actual button inside will use its default.
      // To achieve the Figma look for the delete button itself (circular, dark bg, white X):
      // 1. Modify DeleteImageButton component OR
      // 2. Use a completely different button here and style it.
      // Let's assume current DeleteImageButton is fine for now, and only mask is styled.
    }
  }

  &:hover .attach-file-mask-image {
    opacity: 1;
  }
}


.file-icon-placeholder { // Old style, potentially still used or can be removed if GenericFileIcon covers all non-image cases
  padding: 4px;
  text-align: center;
  font-size: 12px;
  color: var(--text-secondary, #555);
  word-break: break-all; // Prevent long names from breaking layout
  span {
    display: -webkit-box;
    -webkit-line-clamp: 3; // Show max 3 lines of text
    -webkit-box-orient: vertical;  
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// The old .attach-file-mask is now fully commented out to avoid conflicts and syntax errors.
/*
.attach-file-mask {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); // Slightly darker mask
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: inherit; // Inherit border-radius from parent (.attach-file-item)
  &:hover {
    opacity: 1;
  }
  // DeleteImageButton styling is likely within its own component or covered by .delete-image if that class is reused
}
*/

/* ============================== */
/* ===== Other UI Components ===== */
/* ============================== */

/* Toast notification for showing prompts */
.prompt-toast {
  position: absolute;
  bottom: -50px; /* Adjust position if needed */
  left: 0;
  right: 0;
  z-index: 999;
  display: flex;
  justify-content: center;
  width: calc(100% - 40px); /* Centered width */
  margin: 0 auto; /* Center horizontally */
  pointer-events: none; /* Allow clicks through */

  .prompt-toast-inner {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    background-color: var(--white);
    color: var(--black);

    border: var(--border-in-light);
    box-shadow: var(--card-shadow);
    padding: 10px 20px;
    border-radius: 100px;

    animation: slide-in-from-top ease 0.3s;
    pointer-events: auto; /* Re-enable pointer events for the toast itself */

    .prompt-toast-content {
      margin-left: 10px;
    }
  }
}

/* Generic section title style */
.section-title {
  font-size: 12px;
  font-weight: bold;
  margin-bottom: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;

  .section-title-action {
    display: flex;
    align-items: center;
  }
}

/* Context prompt editing UI (in modal or sidebar?) */
.context-prompt {
  .context-prompt-insert {
    display: flex;
    justify-content: center;
    padding: 4px;
    opacity: 0.2;
    transition: all ease 0.3s;
    background-color: rgba(0, 0, 0, 0);
    cursor: pointer;
    border-radius: 4px;
    margin-top: 4px;
    margin-bottom: 4px;

    &:hover {
      opacity: 1;
      background-color: rgba(0, 0, 0, 0.05);
    }
  }

  .context-prompt-row {
    display: flex;
    justify-content: center;
    align-items: center; /* Vertically align items */
    width: 100%;
    gap: 10px; /* Add gap between elements */

    &:hover {
      .context-drag {
        opacity: 1;
      }
    }

    .context-drag {
      display: flex;
      align-items: center;
      opacity: 0.5;
      transition: all ease 0.3s;
      cursor: grab;
    }

    .context-role {
      /* margin-right: 10px; */ /* Replaced by gap */
      font-weight: bold;
    }

    .context-content {
      flex: 1;
      max-width: 100%;
      text-align: left;
    }

    .context-delete-button {
      /* margin-left: 10px; */ /* Replaced by gap */
    }
  }

  .context-prompt-button {
    flex: 1;
  }
}

/* Display for memory prompt (if used) */
.memory-prompt {
  margin: 20px 0;

  .memory-prompt-content {
    background-color: var(--white);
    color: var(--black);
    border: var(--border-in-light);
    border-radius: 10px;
    padding: 10px;
    font-size: 12px;
    user-select: text;
  }
}

/* Divider/button for clearing context */
.clear-context {
  margin: 20px 0 0 0;
  padding: 4px 0;

  border-top: var(--border-in-light);
  border-bottom: var(--border-in-light);
  box-shadow: var(--card-shadow) inset;

  display: flex;
  justify-content: center;
  align-items: center;

  color: var(--black);
  transition: all ease 0.3s;
  cursor: pointer;
  overflow: hidden;
  position: relative;
  font-size: 12px;

  animation: slide-in ease 0.3s;

  $linear: linear-gradient(
    to right,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 1),
    rgba(0, 0, 0, 0)
  );
  mask-image: $linear;

  /* Mixins for show/hide animation */
  @mixin show {
    transform: translateY(0);
    position: relative;
    transition: all ease 0.3s;
    opacity: 1;
  }

  @mixin hide {
    transform: translateY(-50%);
    position: absolute;
    transition: all ease 0.1s;
    opacity: 0;
  }

  &-tips {
    @include show;
    opacity: 0.5;
  }

  &-revert-btn {
    color: var(--primary);
    @include hide;
  }

  &:hover {
    opacity: 1;
    border-color: var(--primary);

    .clear-context-tips {
      @include hide;
    }

    .clear-context-revert-btn {
      @include show;
    }
  }
}

/* Shortcut key display modal */
.shortcut-key-container {
  padding: 10px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.shortcut-key-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: 16px;
}

.shortcut-key-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  overflow: hidden;
  padding: 10px;
  background-color: var(--white);
}

.shortcut-key-title {
  font-size: 14px;
  color: var(--black);
}

.shortcut-key-keys {
  display: flex;
  gap: 8px;
}

.shortcut-key {
  display: flex;
  align-items: center;
  justify-content: center;
  border: var(--border-in-light);
  border-radius: 8px;
  padding: 4px;
  background-color: var(--gray);
  min-width: 32px;
}

.shortcut-key span {
  font-size: 12px;
  color: var(--black);
}

/* Scroll to bottom button positioned in the chat view (original class) */
.scroll-to-bottom-chatview {
  /* Inherits .chat-input-action base styles (circular, hover etc.) */
  /* Fixed positioning removed, handled by wrapper */
}

/* Wrapper div for the scroll-to-bottom button to handle dynamic positioning */
.scroll-to-bottom-chatview-wrapper {
  position: absolute; /* Position relative to chat-body-container */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Adjust for button width */
  z-index: 10; /* Ensure it's above messages */
  /* bottom property is set dynamically via inline style */
}

/* Add some basic styling for the layout if not reusing chat.module.scss directly for layout structure */
/* For example, in your scss file: */
/* .chat-layout-container { */
/*   display: flex; */
/*   flex-direction: column; */
/*   height: 100vh; // Or 100% if parent has height */
/* } */
/* .chat-layout-main-content { */
/*   flex-grow: 1; */
/*   overflow-y: auto; // If content scrolls independently */
/* } */
/* .chat-layout-input-panel-wrapper { */
/*   flex-shrink: 0; // Prevent input panel from shrinking */
/* } */

.chat-layout-container {
  display: flex;
  flex-direction: column;
  height: 100%; // Assuming parent like <main> or <body> provides height context
  // or use 100vh if it's meant to be full viewport height always
}

.chat-layout-main-content {
  flex-grow: 1;
  overflow-y: auto; // Important for scrollable chat messages
  position: relative; // For potential absolute positioned elements within
}

.chat-layout-input-panel-wrapper {
  flex-shrink: 0; // Prevent input panel from shrinking when content grows
  // Add any specific styling for the wrapper if needed, e.g., padding, border-top
  // border-top: 1px solid var(--border-color); // Example
}

.chat-message-error-bubble {
  background: #FFF4F4;
  border-radius: 8px;
  outline: 1px #F33D4F solid;
  outline-offset: -1px;
  color: #F33D4F;
  box-shadow: none;
  border: none;
  padding: 16px 16px 12px 16px;
  margin-top: 10px;
  font-size: 1rem;
  font-family: 'Inter', sans-serif;
  font-weight: 500;
  line-height: 1.5;
  display: flex;
  flex-direction: column;
  max-width: 100%;
}

// Remove or override any full-width error container styles if present
.chat-message-error {
  width: auto;
  background: none;
  box-shadow: none;
  border: none;
  margin-bottom: 0;
  gap: 0;
  align-items: stretch;
  justify-content: stretch;
}